version: '3'

services:
###> doctrine/doctrine-bundle ###
#  php:
#    build:
#      context: ./build/php
#      dockerfile: Dockerfile
#    container_name: php
#    depends_on:
#      - database
#    volumes:
#      - .:/var/www/project
#      - ./docker/php:/var/www/log
#
#  nginx:
#    build:
#      context: ./build/nginx
#      dockerfile: Dockerfile
#    container_name: nginx
#    volumes:
#      - ./docker/nginx:/var/log/nginx
#      - .:/var/www/project
#    ports:
#      - "8000:80"

  elastic:
    image: elasticsearch:8.7.0
    container_name: elastic
    environment:
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - discovery.type=single-node
      - ELASTIC_PASSWORD=elastic1234
      - xpack.security.enabled=false
    volumes:
      - ./docker/elastic:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    env_file:
      - .env.docker

  database:
    image: postgres:${POSTGRES_VERSION:-15}-alpine
    container_name: kupala_postgres
    volumes:
      - ./docker/postgres:/var/lib/postgresql/data:rw
    env_file:
      - .env.docker
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###
  redis:
    image: redis:alpine
    container_name: redis
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"
    ports:
      - "6379:6379"
    volumes:
      - redis:/data
    env_file:
      - .env.docker


volumes:
###> doctrine/doctrine-bundle ###
  kupala_db:
  elastic:
  redis:
###< doctrine/doctrine-bundle ###
